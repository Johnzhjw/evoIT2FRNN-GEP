function genfigHV(iters, tmpMean, tmpStd, strInst, legendName)

%  YMATRIX1:  errorbar y 矩阵数据
%  DMATRIX1:  errorbar delta 矩阵数据

% 创建 figure
figure1 = figure;

% 创建 axes
axes1 = axes('Parent',figure1);
hold(axes1,'on');

Markers = {
    'o',...
    '>',...
    '<'...
    'v',...
    '^',...
    'diamond',...
    'pentagram',...
    'square',...
    'hexagram',...
    '*',...
    '+',...
    'x',...
    '>',...
    '<',...
    'v',...
};
Markersizes = {
    6,...
    6,...
    6,...
    6,...
    6,...
    6,...
    6,...
    6,...
    6,...
    6,...
    12,...
    12,...
    12,...
    12,...
    12,...
};
colors ={
    [     0    0.4470    0.7410];
    [0.8500    0.3250    0.0980];
    [0.9290    0.6940    0.1250];
    [0.4940    0.1840    0.5560];
    [0.4660    0.6740    0.1880];
    [0.3010    0.7450    0.9330];
    [0.6350    0.0780    0.1840];
    [0.0800    0.1700    0.5500];
    [1.0000    0.1700    0.5500];
    [0.0800    1.0000    0.5500];
    [0.0800    0.1700    1.0000];
    [0.8000    1.0000    0.0500];
    [1.0000    0.1700    1.0000];
    [0.0800    1.0000    1.0000];
    [0.0000    0.0000    0.0000];
};

count = 1;
% 使用 errorbar 的矩阵输入创建多个误差条
for i=1:size(tmpMean,1)
    if mod(i,3) == 1
        errorbar1(i) = errorbar(iters,tmpMean(i,:),tmpStd(i,:),'LineWidth',1,...
            'DisplayName',strrep(legendName{count,1,1},'_','\_')...
            ,'Marker',Markers{count},'MarkerSize',Markersizes{count},'color',colors{count});
    elseif mod(i,3) == 2
        errorbar1(i) = errorbar(iters,tmpMean(i,:),tmpStd(i,:),'LineWidth',1,...
            'DisplayName',strrep(legendName{count,1,2},'_','\_')...
            ,'Marker',Markers{count},'MarkerSize',Markersizes{count},'color',colors{count},'LineStyle','--');
    elseif mod(i,3) == 0
        errorbar1(i) = errorbar(iters,tmpMean(i,:),tmpStd(i,:),'LineWidth',1,...
            'DisplayName',strrep(legendName{count,1,3},'_','\_')...
            ,'Marker',Markers{count},'MarkerSize',Markersizes{count},'color',colors{count},'LineStyle',':');
        count = count + 1;
    elseif mod(i,3) == 3
        errorbar1(i) = errorbar(iters,tmpMean(i,:),tmpStd(i,:),'LineWidth',1,...
            'DisplayName',strrep(legendName{count,1,4},'_','\_')...
            ,'Marker',Markers{count},'MarkerSize',Markersizes{count},'color',colors{count},'LineStyle','-.');
        count = count + 1;
    end
end
% set(errorbar1(9),'DisplayName','DPCLON','Marker','square');
% set(errorbar1(8),'DisplayName','DPCCMOLSEA','Marker','pentagram');
% set(errorbar1(7),'DisplayName','DPCCMOEA','Marker','diamond');
% set(errorbar1(6),'DisplayName','NSGA-III','Marker','^');
% set(errorbar1(5),'DisplayName','NSGA-II','Marker','v');
% set(errorbar1(4),'DisplayName','MOEA/DVA','Marker','<');
% set(errorbar1(3),'DisplayName','MOEA/D','Marker','>');
% set(errorbar1(2),'DisplayName','CMODE','Marker','*');
% set(errorbar1(1),'DisplayName','CCGDE3','Marker','o');

% 创建 xlabel
xlabel('FEs');

% 创建 title
tmp=sprintf('%s', strInst);
title(tmp);

% 创建 ylabel
ylabel('HV Values');

% 取消以下行的注释以保留坐标轴的 X 范围
%xlim(axes1,[0 max(iters(1,:))]);
box(axes1,'on');

% 设置其余坐标轴属性
set(axes1,'FontSize',11,'FontWeight','bold','XGrid','on',...
    'YGrid','on','YMinorTick','on');

% 创建 legend
legend1 = legend(axes1,'show');
set(legend1,'Location','best');
