#ifndef _MOP_EVO5_FRNN_
#define _MOP_EVO5_FRNN_

//////////////////////////////////////////////////////////////////////////
//EVO5_FRNN - fuzzy rough neural network
#define N_INPUT_EVO5_FRNN 3
#define N_IN_RSD_EVO5_FRNN (N_INPUT_EVO5_FRNN - 1)
#define N_OUTPUT_EVO5_FRNN 1
#define MAX_NUM_CLUSTER_EVO5_FRNN 3
#define MIN_NUM_CLUSTER_EVO5_FRNN 1
#define MAX_NUM_CLUSTER_MEM_PPARA_EVO5_FRNN (6 + 2)
#define NUM_CLASS_EVO5_FRNN 3
#define MAX_NUM_FUZZY_RULE_EVO5_FRNN (2 * N_INPUT_EVO5_FRNN + 1)
#define DIM_CLUSTER_BIN_RULE_EVO5_FRNN (MAX_NUM_FUZZY_RULE_EVO5_FRNN * N_INPUT_EVO5_FRNN)
#define DIM_CLUSTER_MEM_EVO5_FRNN (N_INPUT_EVO5_FRNN * MAX_NUM_CLUSTER_EVO5_FRNN)
#define DIM_CLUSTER_MEM_TYPE_EVO5_FRNN DIM_CLUSTER_MEM_EVO5_FRNN
#define DIM_CLUSTER_MEM_PARA_EVO5_FRNN (MAX_NUM_CLUSTER_MEM_PPARA_EVO5_FRNN * DIM_CLUSTER_MEM_EVO5_FRNN)
#define DIM_FUZZY_BIN_ROUGH_EVO5_FRNN (NUM_CLASS_EVO5_FRNN * MAX_NUM_FUZZY_RULE_EVO5_FRNN)
#define DIM_FUZZY_ROUGH_MEM_PARA_EVO5_FRNN (NUM_CLASS_EVO5_FRNN * MAX_NUM_FUZZY_RULE_EVO5_FRNN)
#define NUM_PARA_CONSE_EVO5_FRNN (N_INPUT_EVO5_FRNN + 1)
#define DIM_CONSEQUENCE_EVO5_FRNN (NUM_CLASS_EVO5_FRNN * (NUM_PARA_CONSE_EVO5_FRNN))
#define DIM_CONSE_WEIGHT_EVO5_FRNN 0

#define DIM_EVO5_FRNN (DIM_CLUSTER_MEM_TYPE_EVO5_FRNN + DIM_CLUSTER_BIN_RULE_EVO5_FRNN + DIM_FUZZY_BIN_ROUGH_EVO5_FRNN + DIM_CLUSTER_MEM_PARA_EVO5_FRNN + DIM_FUZZY_ROUGH_MEM_PARA_EVO5_FRNN + DIM_CONSEQUENCE_EVO5_FRNN + DIM_CONSE_WEIGHT_EVO5_FRNN)
#define DIM_OBJ_EVO5_FRNN 2

void Initialize_data_EVO5_FRNN(int curN, int numN, int trainNo, int testNo, int endNo);
void Fitness_EVO5_FRNN(double* individual, double* fitness, double* constrainV, int nx, int M);
void Fitness_EVO5_FRNN_testSet(double* individual, double* fitness);
void SetLimits_EVO5_FRNN(double* minLimit, double* maxLimit, int nx);
int  CheckLimits_EVO5_FRNN(double* x, int nx);

#endif
