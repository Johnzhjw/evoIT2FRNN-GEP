#include "global.h"
#include "utility_rand.h"
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define PI 3.1415926535897932384626433832795

//chaos
double chebyshevMap();//(-1,1)
// double iterativeMap();//???(-1,1)
double piecewise_linearMap();//(0,1)
double sinusMap();//(0,1)
double logisticMap();//(0,1)
double circleMap();//(0,1)
double gaussMap();
double tentMap();
//
double chaosMap();

//
long rnd_uni_init;
double chaos_init = 0.36;
int rand_count = 1;
double debug_count = 0;
int select_count = 0;
int fix_val_util_rand = 1;

int get_select_count_uti_rand()
{
	return select_count;
}

ENUM_RAND_NUM_TYPE rand_type = RAND_UNIF;
double (*pointer_gen_rand)() = NULL;

//pi 15000wei
double PIs[1500] = {
	0.1415926535, 0.8979323846, 0.2643383279, 0.5028841971, 0.6939937510,
	0.5820974944, 0.5923078164, 0.0628620899, 0.8628034825, 0.3421170679,
	0.8214808651, 0.3282306647, 0.0938446095, 0.5058223172, 0.5359408128,
	0.4811174502, 0.8410270193, 0.8521105559, 0.6446229489, 0.5493038196,
	0.4428810975, 0.6659334461, 0.2847564823, 0.3786783165, 0.2712019091,
	0.4564856692, 0.3460348610, 0.4543266482, 0.1339360726, 0.0249141273,
	0.7245870066, 0.0631558817, 0.4881520920, 0.9628292540, 0.9171536436,
	0.7892590360, 0.0113305305, 0.4882046652, 0.1384146951, 0.9415116094,
	0.3305727036, 0.5759591953, 0.0921861173, 0.8193261179, 0.3105118548,
	0.0744623799, 0.6274956735, 0.1885752724, 0.8912279381, 0.8301194912,
	0.9833673362, 0.4406566430, 0.8602139494, 0.6395224737, 0.1907021798,
	0.6094370277, 0.0539217176, 0.2931767523, 0.8467481846, 0.7669405132,
	0.0005681271, 0.4526356082, 0.7785771342, 0.7577896091, 0.7363717872,
	0.1468440901, 0.2249534301, 0.4654958537, 0.1050792279, 0.6892589235,
	0.4201995611, 0.2129021960, 0.8640344181, 0.5981362977, 0.4771309960,
	0.5187072113, 0.4999999837, 0.2978049951, 0.0597317328, 0.1609631859,
	0.5024459455, 0.3469083026, 0.4252230825, 0.3344685035, 0.2619311881,
	0.7101000313, 0.7838752886, 0.5875332083, 0.8142061717, 0.7669147303,
	0.5982534904, 0.2875546873, 0.1159562863, 0.8823537875, 0.9375195778,
	0.1857780532, 0.1712268066, 0.1300192787, 0.6611195909, 0.2164201989,
	0.3809525720, 0.1065485863, 0.2788659361, 0.5338182796, 0.8230301952,
	0.0353018529, 0.6899577362, 0.2599413891, 0.2497217752, 0.8347913151,
	0.5574857242, 0.4541506959, 0.5082953311, 0.6861727855, 0.8890750983,
	0.8175463746, 0.4939319255, 0.0604009277, 0.0167113900, 0.9848824012,
	0.8583616035, 0.6370766010, 0.4710181942, 0.9555961989, 0.4676783744,
	0.9448255379, 0.7747268471, 0.0404753464, 0.6208046684, 0.2590694912,
	0.9331367702, 0.8989152104, 0.7521620569, 0.6602405803, 0.8150193511,
	0.2533824300, 0.3558764024, 0.7496473263, 0.9141992726, 0.0426992279,
	0.6782354781, 0.6360093417, 0.2164121992, 0.4586315030, 0.2861829745,
	0.5570674983, 0.8505494588, 0.5869269956, 0.9092721079, 0.7509302955,
	0.3211653449, 0.8720275596, 0.0236480665, 0.4991198818, 0.3479775356,
	0.6369807426, 0.5425278625, 0.5181841757, 0.4672890977, 0.7727938000,
	0.8164706001, 0.6145249192, 0.1732172147, 0.7235014144, 0.1973568548,
	0.1613611573, 0.5255213347, 0.5741849468, 0.4385233239, 0.0739414333,
	0.4547762416, 0.8625189835, 0.6948556209, 0.9219222184, 0.2725502542,
	0.5688767179, 0.0494601653, 0.4668049886, 0.2723279178, 0.6085784383,
	0.8279679766, 0.8145410095, 0.3883786360, 0.9506800642, 0.2512520511,
	0.7392984896, 0.0841284886, 0.2694560424, 0.1965285022, 0.2106611863,
	0.0674427862, 0.2039194945, 0.0471237137, 0.8696095636, 0.4371917287,
	0.4677646575, 0.7396241389, 0.0865832645, 0.9958133904, 0.7802759009,
	0.9465764078, 0.9512694683, 0.9835259570, 0.9825822620, 0.5224894077,
	0.2671947826, 0.8482601476, 0.9909026401, 0.3639443745, 0.5305068203,
	0.4962524517, 0.4939965143, 0.1429809190, 0.6592509372, 0.2169646151,
	0.5709858387, 0.4105978859, 0.5977297549, 0.8930161753, 0.9284681382,
	0.6868386894, 0.2774155991, 0.8559252459, 0.5395943104, 0.9972524680,
	0.8459872736, 0.4469584865, 0.3836736222, 0.6260991246, 0.0805124388,
	0.4390451244, 0.1365497627, 0.8079771569, 0.1435997700, 0.1296160894,
	0.4169486855, 0.5848406353, 0.4220722258, 0.2848864815, 0.8456028506,
	0.0168427394, 0.5226746767, 0.8895252138, 0.5225499546, 0.6672782398,
	0.6456596116, 0.3548862305, 0.7745649803, 0.5593634568, 0.1743241125,
	0.1507606947, 0.9451096596, 0.0940252288, 0.7971089314, 0.5669136867,
	0.2287489405, 0.6010150330, 0.8617928680, 0.9208747609, 0.1782493858,
	0.9009714909, 0.6759852613, 0.6554978189, 0.3129784821, 0.6829989487,
	0.2265880485, 0.7564014270, 0.4775551323, 0.7964145152, 0.3746234364,
	0.5428584447, 0.9526586782, 0.1051141354, 0.7357395231, 0.1342716610,
	0.2135969536, 0.2314429524, 0.8493718711, 0.0145765403, 0.5902799344,
	0.0374200731, 0.0578539062, 0.1983874478, 0.0847848968, 0.3321445713,
	0.8687519435, 0.0643021845, 0.3191048481, 0.0053706146, 0.8067491927,
	0.8191197939, 0.9520614196, 0.6342875444, 0.0643745123, 0.7181921799,
	0.9839101591, 0.9561814675, 0.1426912397, 0.4894090718, 0.6494231961,
	0.5679452080, 0.9514655022, 0.5231603881, 0.9301420937, 0.6213785595,
	0.6638937787, 0.0830390697, 0.9207734672, 0.2182562599, 0.6615014215,
	0.0306803844, 0.7734549202, 0.6054146659, 0.2520149744, 0.2850732518,
	0.6660021324, 0.3408819071, 0.0486331734, 0.6496514539, 0.0579626856,
	0.1005508106, 0.6587969981, 0.6357473638, 0.4052571459, 0.1028970641,
	0.4011097120, 0.6280439039, 0.7595156771, 0.5770042033, 0.7869936007,
	0.2305587631, 0.7635942187, 0.3125147120, 0.5329281918, 0.2618612586,
	0.7321579198, 0.4148488291, 0.6447060957, 0.5270695722, 0.0917567116,
	0.7229109816, 0.9091528017, 0.3506712748, 0.5832228718, 0.3520935396,
	0.5725121083, 0.5791513698, 0.8209144421, 0.0067510334, 0.6711031412,
	0.6711136990, 0.8658516398, 0.3150197016, 0.5151168517, 0.1437657618,
	0.3515565088, 0.4909989859, 0.9823873455, 0.2833163550, 0.7647918535,
	0.8932261854, 0.8963213293, 0.3089857064, 0.2046752590, 0.7091548141,
	0.6549859461, 0.6371802709, 0.8199430992, 0.4488957571, 0.2828905923,
	0.2332609729, 0.9712084433, 0.5732654893, 0.8239119325, 0.9746366730,
	0.5836041428, 0.1388303203, 0.8249037589, 0.8524374417, 0.0291327656,
	0.1809377344, 0.4030707469, 0.2112019130, 0.2033038019, 0.7621101100,
	0.4492932151, 0.6084244485, 0.9637669838, 0.9522868478, 0.3123552658,
	0.2131449576, 0.8572624334, 0.4189303968, 0.6426243410, 0.7732269780,
	0.2807318915, 0.4411010446, 0.8232527162, 0.0105265227, 0.2111660396,
	0.6655730925, 0.4711055785, 0.3763466820, 0.6531098965, 0.2691862056,
	0.4769312570, 0.5863566201, 0.8558100729, 0.3606598764, 0.8611791045,
	0.3348850346, 0.1136576867, 0.5324944166, 0.8039626579, 0.7877185560,
	0.8455296541, 0.2665408530, 0.6143444318, 0.5867697514, 0.5661406800,
	0.7002378776, 0.5913440171, 0.2749470420, 0.5622305389, 0.9456131407,
	0.1127000407, 0.8547332699, 0.3908145466, 0.4645880797, 0.2708266830,
	0.6343285878, 0.5698305235, 0.8089330657, 0.5740679545, 0.7163775254,
	0.2021149557, 0.6158140025, 0.0126228594, 0.1302164715, 0.5097925923,
	0.0990796547, 0.3761255176, 0.5675135751, 0.7829666454, 0.7791745011,
	0.2996148903, 0.0463994713, 0.2962107340, 0.4375189573, 0.5961458901,
	0.9389713111, 0.7904297828, 0.5647503203, 0.1986915140, 0.2870808599,
	0.0480109412, 0.1472213179, 0.4764777262, 0.2414254854, 0.5403321571,
	0.8530614228, 0.8137585043, 0.0633217518, 0.2979866223, 0.7172159160,
	0.7716692547, 0.4873898665, 0.4949450114, 0.6540628433, 0.6639379003,
	0.9769265672, 0.1463853067, 0.3609657120, 0.9180763832, 0.7166416274,
	0.8888007869, 0.2560290228, 0.4721040317, 0.2118608204, 0.1900042296,
	0.6171196377, 0.9213375751, 0.1495950156, 0.6049631862, 0.9472654736,
	0.4252308177, 0.0367515906, 0.7350235072, 0.8354056704, 0.0386743513,
	0.6222247715, 0.8915049530, 0.9844489333, 0.0963408780, 0.7693259939,
	0.7805419341, 0.4473774418, 0.4263129860, 0.8099888687, 0.4132604721,
	0.5695162396, 0.5864573021, 0.6315981931, 0.9516735381, 0.2974167729,
	0.4786724229, 0.2465436680, 0.0980676928, 0.2382806899, 0.6400482435,
	0.4037014163, 0.1496589794, 0.0924323789, 0.6907069779, 0.4223625082,
	0.2168895738, 0.3798623001, 0.5937764716, 0.5122893578, 0.6015881617,
	0.5578297352, 0.3344604281, 0.5126272037, 0.3431465319, 0.7777416031,
	0.9906655418, 0.7639792933, 0.4419521541, 0.3418994854, 0.4473456738,
	0.3162499341, 0.9131814809, 0.2777710386, 0.3877343177, 0.2075456545,
	0.3220777092, 0.1201905166, 0.0962804909, 0.2636019759, 0.8828161332,
	0.3166636528, 0.6193266863, 0.3606273567, 0.6303544776, 0.2803504507,
	0.7723554710, 0.5859548702, 0.7908143562, 0.4014517180, 0.6246436267,
	0.9456127531, 0.8134078330, 0.3362542327, 0.8394497538, 0.2437205835,
	0.3114771199, 0.2606381334, 0.6776879695, 0.9703098339, 0.1307710987,
	0.0408591337, 0.4641442822, 0.7726346594, 0.7047458784, 0.7787201927,
	0.7152807317, 0.6790770715, 0.7213444730, 0.6057007334, 0.9243693113,
	0.8350493163, 0.1284042512, 0.1925651798, 0.0694113528, 0.0131470130,
	0.4781643788, 0.5185290928, 0.5452011658, 0.3934196562, 0.1349143415,
	0.9562586586, 0.5570552690, 0.4965209858, 0.0338507224, 0.2648293972,
	0.8584783163, 0.0577775606, 0.8887644624, 0.8246857926, 0.0395352773,
	0.4803048029, 0.0058760758, 0.2510474709, 0.1643961362, 0.6760449256,
	0.2742042083, 0.2085661190, 0.6254543372, 0.1315359584, 0.5068772460,
	0.2901618766, 0.7952406163, 0.4252257719, 0.5429162991, 0.9306455377,
	0.9914037340, 0.4328752628, 0.8896399587, 0.9475729174, 0.6426357455,
	0.2540790914, 0.5135711136, 0.9410911939, 0.3251910760, 0.2082520261,
	0.8798531887, 0.7058429725, 0.9167781314, 0.9699009019, 0.2116971737,
	0.2784768472, 0.6860849003, 0.3770242429, 0.1651300500, 0.5168323364,
	0.3503895170, 0.2989392233, 0.4517220138, 0.1280696501, 0.1784408745,
	0.1960121228, 0.5993716231, 0.3017114448, 0.4640903890, 0.6449544400,
	0.6198690754, 0.8516026327, 0.5052983491, 0.8740786680, 0.8818338510,
	0.2283345085, 0.0486082503, 0.9302133219, 0.7155184306, 0.3545500766,
	0.8282949304, 0.1377655279, 0.3975175461, 0.3953984683, 0.3936383047,
	0.4611996653, 0.8581538420, 0.5685338621, 0.8672523340, 0.2830871123,
	0.2827892125, 0.0771262946, 0.3229563989, 0.8989358211, 0.6745627010,
	0.2183564622, 0.0134967151, 0.8819097303, 0.8119800497, 0.3407239610,
	0.3685406643, 0.1939509790, 0.1906996395, 0.5245300545, 0.0580685501,
	0.9567302292, 0.1913933918, 0.5680344903, 0.9820595510, 0.0226353536,
	0.1920419947, 0.4553859381, 0.0234395544, 0.9597783779, 0.0237421617,
	0.2711172364, 0.3435439478, 0.2218185286, 0.2408514006, 0.6604433258,
	0.8856986705, 0.4315470696, 0.5747458550, 0.3323233421, 0.0730154594,
	0.0516553790, 0.6866273337, 0.9958511562, 0.5784322988, 0.2737231989,
	0.8757141595, 0.7811196358, 0.3300594087, 0.3068121602, 0.8764962867,
	0.4460477464, 0.9159950549, 0.7374256269, 0.0104903778, 0.1986835938,
	0.1465741268, 0.0492564879, 0.8556145372, 0.3478673303, 0.9046883834,
	0.3634655379, 0.4986419270, 0.5638729317, 0.4872332083, 0.7601123029,
	0.9113679386, 0.2708943879, 0.9362016295, 0.1541337142, 0.4892830722,
	0.0126901475, 0.4668476535, 0.7616477379, 0.4675200490, 0.7571555278,
	0.1965362132, 0.3926406160, 0.1363581559, 0.0742202020, 0.3187277605,
	0.2772190055, 0.6148425551, 0.8792530343, 0.5139844253, 0.2234157623,
	0.3610642506, 0.3904975008, 0.6562710953, 0.5919465897, 0.5141310348,
	0.2276930624, 0.7435363256, 0.9160781547, 0.8181152843, 0.6679570611,
	0.0861533150, 0.4452127473, 0.9245449454, 0.2368288606, 0.1340841486,
	0.3776700961, 0.2071512491, 0.4043027253, 0.8607648236, 0.3414334623,
	0.5189757664, 0.5216413767, 0.9690314950, 0.1910857598, 0.4423919862,
	0.9164219399, 0.4907236234, 0.6468441173, 0.9403265918, 0.4044378051,
	0.3338945257, 0.4239950829, 0.6591228508, 0.5558215725, 0.0310712570,
	0.1266830240, 0.2929525220, 0.1187267675, 0.6220415420, 0.5161841634,
	0.8475651699, 0.9811614101, 0.0029960783, 0.8690929160, 0.3028840026,
	0.9104140792, 0.8862150784, 0.2451670908, 0.7000699282, 0.1206604183,
	0.7180653556, 0.7252532567, 0.5328612910, 0.4248776182, 0.5829765157,
	0.9598470356, 0.2226293486, 0.0034158722, 0.9805349896, 0.5022629174,
	0.8788202734, 0.2092222453, 0.3985626476, 0.6914905562, 0.8425039127,
	0.5771028402, 0.7998066365, 0.8254889264, 0.8802545661, 0.0172967026,
	0.6407655904, 0.2909945681, 0.5065265305, 0.3718294127, 0.0336931378,
	0.5178609040, 0.7086671149, 0.6558343434, 0.7693385781, 0.7113864558,
	0.7367812301, 0.4587687126, 0.6034891390, 0.9562009939, 0.3610310291,
	0.6161528813, 0.8437909904, 0.2317473363, 0.9480457593, 0.1493140529,
	0.7634757481, 0.1935670911, 0.0137751721, 0.0080315590, 0.2485309066,
	0.9203767192, 0.2033229094, 0.3346768514, 0.2214477379, 0.3937517034,
	0.4366199104, 0.0337511173, 0.5471918550, 0.4644902636, 0.5512816228,
	0.8244625759, 0.1633303910, 0.7225383742, 0.1821408835, 0.0865739177,
	0.1509682887, 0.4782656995, 0.9957449066, 0.1758344137, 0.5223970968,
	0.3408005355, 0.9849175417, 0.3818839994, 0.4697486762, 0.6551658276,
	0.5848358845, 0.3142775687, 0.9002909517, 0.0283529716, 0.3445621296,
	0.4043523117, 0.6006651012, 0.4120065975, 0.5851276178, 0.5838292041,
	0.9748442360, 0.8007193045, 0.7618932349, 0.2292796501, 0.9875187212,
	0.7267507981, 0.2554709589, 0.0455635792, 0.1221033346, 0.6974992356,
	0.3025494780, 0.2490114195, 0.2123828153, 0.0911407907, 0.3860251522,
	0.7429958180, 0.7247162591, 0.6685451333, 0.1239480494, 0.7079119153,
	0.2673430282, 0.4418604142, 0.6363954800, 0.0448002670, 0.4962482017,
	0.9289647669, 0.7583183271, 0.3142517029, 0.6923488962, 0.7668440323,
	0.2609275249, 0.6035799646, 0.9256504936, 0.8183609003, 0.2380929345,
	0.9588970695, 0.3653494060, 0.3402166544, 0.3755890045, 0.6328822505,
	0.4525564056, 0.4482465151, 0.8754711962, 0.1844396582, 0.5337543885,
	0.6909411303, 0.1509526179, 0.3780029741, 0.2076651479, 0.3942590298,
	0.9695946995, 0.5657612186, 0.5619673378, 0.6236256125, 0.2163208628,
	0.6922210327, 0.4889218654, 0.3648022967, 0.8070576561, 0.5144632046,
	0.9279068212, 0.0738837781, 0.4233562823, 0.6089632080, 0.6822246801,
	0.2248261177, 0.1858963814, 0.0918390367, 0.3672220888, 0.3215137556,
	0.0037279839, 0.4004152970, 0.0287830766, 0.7094447456, 0.0134556417,
	0.2543709069, 0.7939612257, 0.1429894671, 0.5435784687, 0.8861444581,
	0.2314593571, 0.9849225284, 0.7160504922, 0.1242470141, 0.2147805734,
	0.5510500801, 0.9086996033, 0.0276347870, 0.8108175450, 0.1193071412,
	0.2339086639, 0.3833952942, 0.5786905076, 0.4310063835, 0.1983438934,
	0.1596131854, 0.3475464955, 0.6978103829, 0.3097164651, 0.4384070070,
	0.7360411237, 0.3599843452, 0.2516105070, 0.2705623526, 0.6012764848,
	0.3084076118, 0.3013052793, 0.2054274628, 0.6540360367, 0.4532865105,
	0.7065874882, 0.2569815793, 0.6789766974, 0.2205750596, 0.8344086973,
	0.5020141020, 0.6723585020, 0.0724522563, 0.2651341055, 0.9240190274,
	0.2162484391, 0.4035998953, 0.5394590944, 0.0704691209, 0.1409387001,
	0.2645600162, 0.3742880210, 0.9276457931, 0.0657922955, 0.2498872758,
	0.4610126483, 0.6999892256, 0.9596881592, 0.0560010165, 0.5256375678,
	0.5667227966, 0.1988578279, 0.4848855834, 0.3975187445, 0.4551296563,
	0.4434803966, 0.4205579829, 0.3680435220, 0.2770984294, 0.2325330225,
	0.7634180703, 0.9476994159, 0.7915945300, 0.6975214829, 0.3366555661,
	0.5678736400, 0.5366656416, 0.5473217043, 0.9035213295, 0.4352916941,
	0.4599041608, 0.7532018683, 0.7937023488, 0.8689479151, 0.0716378529,
	0.0234529244, 0.0773659495, 0.6305100742, 0.1087142613, 0.4974595615,
	0.1384987137, 0.5704710178, 0.7957310422, 0.9690666702, 0.1449863746,
	0.4595280824, 0.3694457897, 0.7233004876, 0.4765241339, 0.0759204340,
	0.1963403911, 0.4732023380, 0.7150952220, 0.1068256342, 0.7471646024,
	0.3354400515, 0.2126693249, 0.3419673977, 0.0415956837, 0.5355516673,
	0.0273900749, 0.7297363549, 0.6453328886, 0.9844061196, 0.4961627734,
	0.4951827369, 0.5588220757, 0.3551766515, 0.8985519098, 0.6665393549,
	0.4810688732, 0.0685990754, 0.0792342402, 0.3009259007, 0.0173196036,
	0.2254756478, 0.9406475483, 0.4664776041, 0.1463233905, 0.6513433068,
	0.4495397907, 0.0903023460, 0.4614709616, 0.9688688501, 0.4083470405,
	0.4607429586, 0.9913829668, 0.2468185710, 0.3188790652, 0.8703665083,
	0.2431974404, 0.7718556789, 0.3482308943, 0.1068287027, 0.2280973624,
	0.8093996270, 0.6074726455, 0.3992539944, 0.2808113736, 0.9433887294,
	0.0630792615, 0.9599546262, 0.4629707062, 0.5948455690, 0.3471197299,
	0.6409089418, 0.0595343932, 0.5123623550, 0.8134949004, 0.3642785271,
	0.3831591256, 0.8989295196, 0.4272875739, 0.4691427253, 0.4366941532,
	0.3610045373, 0.0488198551, 0.7065941217, 0.3524625895, 0.4873016760,
	0.0298865925, 0.7866285612, 0.4966552353, 0.3829428785, 0.4253404830,
	0.8330701653, 0.7228563559, 0.1525347844, 0.5981831341, 0.1290019992,
	0.0598135220, 0.5117336585, 0.6407826484, 0.9427644113, 0.7639386692,
	0.4803118364, 0.4536985891, 0.7544264739, 0.9882284621, 0.8449008777,
	0.6977631279, 0.5722672655, 0.5625962825, 0.4276531830, 0.0134070922,
	0.3343657791, 0.6012809317, 0.9401718598, 0.5999338492, 0.3549564005,
	0.7099558561, 0.1349802524, 0.9906698423, 0.3017350358, 0.0440811685,
	0.5265311709, 0.9570899427, 0.3287092584, 0.8789443646, 0.0050410892,
	0.2669178352, 0.5870785951, 0.2983441729, 0.5351953788, 0.5534573742,
	0.6085902908, 0.1765155780, 0.3905946408, 0.7350612322, 0.6112009373,
	0.1080485485, 0.2635722825, 0.7682034160, 0.5048466277, 0.5045003126,
	0.2008007998, 0.0492548534, 0.6941469775, 0.1649327095, 0.0493463938,
	0.2432227188, 0.5159740547, 0.0214828971, 0.1177792376, 0.1225788734,
	0.7718819682, 0.5462981268, 0.6858170507, 0.4027255026, 0.3329044976,
	0.2778944236, 0.2167411918, 0.6269439650, 0.6715157795, 0.8675648239,
	0.9391760426, 0.0176338704, 0.5499017614, 0.3641204692, 0.1823707648,
	0.8783419689, 0.6861181558, 0.1587360629, 0.3860381017, 0.1215855272,
	0.6683008238, 0.3404656475, 0.8804051380, 0.8016336388, 0.7421637140,
	0.6435495561, 0.8689641122, 0.8214075330, 0.2655100424, 0.1048967835,
	0.2858829024, 0.3670904887, 0.1181909094, 0.9453314421, 0.8287661810,
	0.3100735477, 0.0549815968, 0.0772009474, 0.6961343609, 0.2861484941,
	0.7850171807, 0.7930681085, 0.4690009445, 0.8995279424, 0.3981392135,
	0.0558642219, 0.6483491512, 0.6390128038, 0.3200109773, 0.8680662877,
	0.9239718014, 0.6134324457, 0.2640097374, 0.2570073592, 0.1003154150,
	0.8936793008, 0.1699805365, 0.2027600727, 0.7496745840, 0.0283624053,
	0.4603726341, 0.6554259027, 0.6018348403, 0.0681138185, 0.5105979705,
	0.6640075094, 0.2608788573, 0.5796037324, 0.5141467867, 0.0368809880,
	0.6097164258, 0.4975951380, 0.6930944940, 0.1515422221, 0.9432913021,
	0.7391253835, 0.5915031003, 0.3303251117, 0.4915696917, 0.4502714943,
	0.3151558854, 0.0392216409, 0.7229101129, 0.0355218157, 0.6282328318,
	0.2342548326, 0.1119128009, 0.2825256190, 0.2052630163, 0.9114772473,
	0.3148573910, 0.7775874425, 0.3876117465, 0.7867116941, 0.4776421441,
	0.1112635835, 0.5387136101, 0.1023267987, 0.7564102468, 0.2403226483,
	0.4641766369, 0.8066378576, 0.8134920453, 0.0224081972, 0.7856471983,
	0.9630878154, 0.3221166912, 0.2464159117, 0.7673225326, 0.4335686146,
	0.1865452226, 0.8126887268, 0.4459684424, 0.1610785401, 0.6768142080,
	0.8850280054, 0.1436131462, 0.3082102594, 0.1737562389, 0.9420757136,
	0.2751674573, 0.1891894562, 0.8352570441, 0.3354375857, 0.5342698699,
	0.4725470316, 0.5661399199, 0.9682628247, 0.2706413362, 0.2217892390,
	0.3176085428, 0.9437339356, 0.1889165125, 0.0424404008, 0.9527198378,
	0.7386480584, 0.7268954624, 0.3882343751, 0.7885201439, 0.5600571048,
	0.1194988423, 0.9060613695, 0.7342315590, 0.7967034614, 0.9143447886,
	0.3604103182, 0.3507365027, 0.7859089757, 0.8272731305, 0.0488939890,
	0.0992391350, 0.3373250855, 0.9826558670, 0.8924261242, 0.9473670193,
	0.9077271307, 0.0686917092, 0.6462548423, 0.2407485503, 0.6608013604,
	0.6689511840, 0.0936686095, 0.4632500214, 0.5852930950, 0.0009071510,
	0.5823626729, 0.3264537382, 0.1049387249, 0.9669933942, 0.4685516483,
	0.2611341461, 0.1068026744, 0.6637334375, 0.3407642940, 0.2668297386,
	0.5220935701, 0.6263846485, 0.2851490362, 0.9320199199, 0.6882851718,
	0.3953669134, 0.5222444708, 0.0459239660, 0.2817156551, 0.5656661113,
	0.5982311225, 0.0628905854, 0.9145097157, 0.5539002439, 0.3153519090,
	0.2107119457, 0.3002438801, 0.7661503527, 0.0862602537, 0.8817975194,
	0.7806101371, 0.5004489917, 0.2100222013, 0.3501310601, 0.6391541589,
	0.5780371177, 0.9277522597, 0.8742891917, 0.9155224171, 0.8958536168,
	0.0594741234, 0.1933984202, 0.1874564925, 0.6443462392, 0.5319531351,
	0.0331147639, 0.4911995072, 0.8584306583, 0.6193536932, 0.9699289837,
	0.9149419394, 0.0608572486, 0.3968836903, 0.2655643642, 0.1664425760,
	0.7914710869, 0.9843157337, 0.4964883529, 0.2769328220, 0.7629472823,
	0.8153740996, 0.1545598798, 0.2598910937, 0.1712621828, 0.3025848112,
	0.3890119682, 0.2142945766, 0.7580718653, 0.8065064870, 0.2613389282,
	0.2994972574, 0.5303328389, 0.6381843944, 0.7707794022, 0.8435988341,
	0.0035838542, 0.3897354243, 0.9564755568, 0.4095224844, 0.5541392394,
	0.1000162076, 0.9363684677, 0.6413017819, 0.6593799715, 0.5746854194,
	0.6334893748, 0.4391297423, 0.9143365936, 0.0410035234, 0.3777065888,
	0.6778113949, 0.8616478747, 0.1407932638, 0.5873862473, 0.2889645643,
	0.5987746676, 0.3847946650, 0.4074111825, 0.6583788784, 0.5485814896,
	0.2961273998, 0.4134427260, 0.8606187245, 0.5452360643, 0.1537101127,
	0.4680977870, 0.4464094758, 0.2803487697, 0.5894832824, 0.1239292960,
	0.5829486191, 0.9667091895, 0.8089833201, 0.2103184303, 0.4012849511,
	0.6203534280, 0.1441276172, 0.8583024355, 0.9830032042, 0.0245120728,
	0.7253558119, 0.5840149180, 0.9692533950, 0.7577840006, 0.7465526031,
	0.4461670508, 0.2768277222, 0.3534191102, 0.6341631571, 0.4740612385,
	0.0425845988, 0.4199076112, 0.8725805911, 0.3935689601, 0.4316682831,
	0.7632356732, 0.5417073420, 0.8173322304, 0.6298799280, 0.4908514094,
	0.7903688786, 0.8789493054, 0.6955703072, 0.6190095020, 0.7643349335,
	0.9106024545, 0.0864536289, 0.3545686295, 0.8531315337, 0.1838682656,
	0.1786227363, 0.7169757741, 0.8302398600, 0.6591481616, 0.4049449650,
	0.1173213138, 0.9574706208, 0.8474802365, 0.3710311508, 0.9842799275
};

/*------Constants for rnd_uni()---------------------------------------*/
#define INF 1.0e14

#define IM1 2147483563
#define IM2 2147483399
#define AM (1.0/IM1)
#define IMM1 (IM1-1)
#define IA1 40014
#define IA2 40692
#define IQ1 53668
#define IQ2 52774
#define IR1 12211
#define IR2 3791
#define NTAB 32
#define NDIV (1+IMM1/NTAB)
#define EPS 1.2e-7
#define RNMX (1.0-EPS)

//generate a uniformly distributed random number in [0,1)
double rnd_uni_gen()
{
	static long idum2 = 123456789;
	static long iy = 0;
	static long iv[NTAB];

	long j;
	long k;
	double temp;

	if (rnd_uni_init <= 0) {
		if (-(rnd_uni_init) < 1) rnd_uni_init = 1;
		else rnd_uni_init = -(rnd_uni_init);
		idum2 = (rnd_uni_init);
		for (j = NTAB + 7; j >= 0; j--) {
			k = (rnd_uni_init) / IQ1;
			rnd_uni_init = IA1 * (rnd_uni_init - k * IQ1) - k * IR1;
			if (rnd_uni_init < 0) rnd_uni_init += IM1;
			if (j < NTAB) iv[j] = rnd_uni_init;
		}
		iy = iv[0];
	}
	k = (rnd_uni_init) / IQ1;
	rnd_uni_init = IA1 * (rnd_uni_init - k * IQ1) - k * IR1;
	if (rnd_uni_init < 0) rnd_uni_init += IM1;
	k = idum2 / IQ2;
	idum2 = IA2 * (idum2 - k * IQ2) - k * IR2;
	if (idum2 < 0) idum2 += IM2;
	j = iy / NDIV;
	iy = iv[j] - idum2;
	iv[j] = rnd_uni_init;
	if (iy < 1) iy += IMM1;
	if ((temp = AM * iy) > RNMX) return RNMX;
	else return temp;
}/*------End of rnd_uni()--------------------------*/

//
double gaussrand(double a, double b)
{
	static double V1, V2, S;
	static int phase = 0;
	double X;

	if (phase == 0) {
		do {
			double U1 = rnd_uni_gen();
			double U2 = rnd_uni_gen();

			V1 = 2 * U1 - 1;
			V2 = 2 * U2 - 1;
			S = V1 * V1 + V2 * V2;
		} while (S >= 1 || S == 0);

		X = V1 * sqrt(-2 * log(S) / S);
	}
	else
		X = V2 * sqrt(-2 * log(S) / S);

	phase = 1 - phase;

	//return X;
	return (X * b + a);
}

//generate a Cauthy distributed random number,C(a,b)
double cauchyrand(double a, double b)
{
	double tem = tan(PI * (rnd_uni_gen() - 0.5));
	return (tem * b + a);
}

int rnd(int low, int high)
{
	int res;
	if (low >= high) {
		res = low;
	}
	else {
		//res = low + (int)(rnd_uni_gen() * (high - low + 1));
		res = low + (int)(pointer_gen_rand() * (high - low + 1));
		if (res > high) {
			res = high;
		}
	}
	return (res);
}

/* Fisher–Yates shuffle algorithm */
void shuffle(int* x, int size)
{
	int i, aux, k = 0;
	for (i = size - 1; i > 0; i--) {
		/* get a value between cero and i  */
		k = rnd(0, i);
		/* exchange of values */
		aux = x[i];
		x[i] = x[k];
		x[k] = aux;
	}
}

int flip_r(float prob)
{
	//if (rnd_uni_gen() <= prob) {
	if (pointer_gen_rand() <= prob) {
		return (1);
	}
	else {
		return (0);
	}
}

double rndreal(double low, double high)
{
	//return (low + (high - low) * rnd_uni_gen());
	return (low + (high - low) * pointer_gen_rand());
}

double HUPRandomExponential(double mu)
{
	double u;
	do {
		u = rnd_uni_gen();
	} while (u == 0);  // discard 0
	return -mu * log(u);
}

double HUPRandomLevy(double c, double alpha)
{
	if ((alpha <= 0) || (alpha > 2))
		return 0;

	double u;
	do {
		u = rnd_uni_gen();
	} while (u == 0);        // discard 0
	u = PI * (u - 0.5);

	if (alpha == 1)        // Cauchy case
		return c * tan(u);

	double v;
	do {
		v = HUPRandomExponential(1.0);
	} while (v == 0);

	if (alpha == 2)        // Gaussian case
		return c * (2 * sin(u) * sqrt(v));

	// general case
	double t = sin(alpha * u) / pow(cos(u), 1 / alpha);
	double s = pow(cos((1 - alpha) * u) / v, (1 - alpha) / alpha);
	return c * t * s;
}

double LevyRand(double c, double alpha)
{
	return HUPRandomLevy(c, alpha);
}

double chebyshevMap()//(-1,1)
{
	double a = 3;

	chaos_init = cos(a * acos(chaos_init));
	//rand_count = rand_count % 2147483647 + 1;
	chaos_init = chaos_init - floor(chaos_init); //fix to (0,1)

	if (chaos_init <= 0 || chaos_init >= 1) {
		select_count = (select_count + 19) % 1500;
		chaos_init = PIs[select_count];
	}
	return chaos_init;
}

// double iterativeMap()//(-1,1)
// {
// 	double a=0.63;//[0,1]
// 	chaos_init=sin(a*PI/chaos_init);
// 	chaos_init=chaos_init-floor(chaos_init);//fix to (0,1)
// 	return chaos_init;
// }
//
double piecewise_linearMap()//(0,1)
{
	double P = 0.3366;
	if (chaos_init < P)
		chaos_init = chaos_init / P;
	else if (chaos_init < 0.5)
		chaos_init = (chaos_init - P) / (0.5 - P);
	else if (chaos_init < 1 - P)
		chaos_init = (1 - P - chaos_init) / (0.5 - P);
	else
		chaos_init = (1 - chaos_init) / P;

	if (chaos_init <= 0 || chaos_init >= 1) {
		select_count = (select_count + 19) % 1500;
		chaos_init = PIs[select_count];
	}
	return chaos_init;
}

double sinusMap()//(0,1)
{
	chaos_init = 2.3 * pow(chaos_init, 2.0 * sin(PI * chaos_init));
	chaos_init = chaos_init - floor(chaos_init);

	if (chaos_init <= 0 || chaos_init >= 1) {
		select_count = (select_count + 19) % 1500;
		chaos_init = PIs[select_count];
	}
	return chaos_init;
}

double logisticMap()//(0,1)
{
	double a = 4.0; //(0,4]

	chaos_init = a * chaos_init * (1.0 - chaos_init);

	if (chaos_init <= 0 || chaos_init >= 1) {
		select_count = (select_count + 19) % 1500;
		chaos_init = PIs[select_count];
	}
	return chaos_init;
}

double circleMap()//(0,1)
{
	double a, b;
	a = 0.5;
	b = 0.2;

	chaos_init = chaos_init + b - (a / (2 * PI)) * sin(2 * PI * chaos_init);
	chaos_init = chaos_init - floor(chaos_init);

	if (chaos_init <= 0 || chaos_init >= 1) {
		select_count = (select_count + 19) % 1500;
		chaos_init = PIs[select_count];
	}
	return chaos_init;
}

double gaussMap()//(0,1)
{
	// 	if(chaos_init==0)
	// 	{
	// 		chaos_init=0;
	// 		return chaos_init;
	// 	}
	// 	else
	{
		chaos_init = 1.0 / chaos_init;
		chaos_init = chaos_init - floor(chaos_init);

		if (chaos_init <= 0 || chaos_init >= 1) {
			select_count = (select_count + 19) % 1500;
			chaos_init = PIs[select_count];
		}
		return chaos_init;
	}
}

double tentMap()//(0,1)
{
	//double alpha = 0.3366;

	if (chaos_init < 0.7) {
		chaos_init = chaos_init / 0.7;
	}
	else {
		chaos_init = 10.0 / 3.0 * chaos_init * (1.0 - chaos_init);
		//chaos_init = (1.0 - chaos_init) / (1.0 - alpha);
	}

	if (chaos_init <= 0 || chaos_init >= 1) {
		select_count = (select_count + 19) % 1500;
		chaos_init = PIs[select_count];
	}
	return chaos_init;
}

double chaosMap()
{
	// 	double tmp = chaosMap();
	// 	if(strct_MPI_info.mpi_rank==1){printf("rank: %d\t%lf...\n",strct_MPI_info.mpi_rank,tmp);}

	//chebyshevMap();
	//piecewise_linearMap();
	//sinusMap();
	//logisticMap();
	//circleMap();
	//gaussMap();
	tentMap();

	if (chaos_init <= 0 || chaos_init >= 1) {
		select_count = (select_count + 19) % 1500;
		chaos_init = PIs[select_count];
	}

	return chaos_init;
}

//
void set_init_rand_para(int seed, int seed_chaos)
{
	rand_count = 1;
	select_count = 0;
	rnd_uni_init = -(long)seed;
	chaos_init = PIs[seed_chaos];
	//
	return;
}

//
void set_init_rand_type()
{
	switch (rand_type) {
	case RAND_UNIF:
		pointer_gen_rand = rnd_uni_gen;
		break;
	case RAND_CHEBYSHEV:
		pointer_gen_rand = chebyshevMap;
		break;
	case RAND_PIECEWISE_LINEAR:
		pointer_gen_rand = piecewise_linearMap;
		break;
	case RAND_SINUS:
		pointer_gen_rand = sinusMap;
		break;
	case RAND_LOGISTIC:
		pointer_gen_rand = logisticMap;
		break;
	case RAND_CIRCLE:
		pointer_gen_rand = circleMap;
		break;
	case RAND_GAUSS:
		pointer_gen_rand = gaussMap;
		break;
	case RAND_TENT:
		pointer_gen_rand = tentMap;
		break;
	default:
		printf("%s(%d): INVALID RAND TYPE, EXITING...\n", __FILE__, __LINE__);
		exit(-77);
		break;
	}
}

long get_rnd_uni_init()
{
	return rnd_uni_init;
}